// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NC_Setup_Assist.Data;

#nullable disable

namespace NC_Setup_Assist.Migrations
{
    [DbContext(typeof(NcSetupContext))]
    [Migration("20251025070534_AddBenötigtRadiusToWerkzeugUnterkategorie")]
    partial class AddBenötigtRadiusToWerkzeugUnterkategorie
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("NC_Setup_Assist.Models.Hersteller", b =>
                {
                    b.Property<int>("HerstellerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("HerstellerID");

                    b.ToTable("Hersteller");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Maschine", b =>
                {
                    b.Property<int>("MaschineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnzahlStationen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HerstellerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Seriennummer")
                        .HasColumnType("TEXT");

                    b.Property<int>("StandortID")
                        .HasColumnType("INTEGER");

                    b.HasKey("MaschineID");

                    b.HasIndex("HerstellerID");

                    b.HasIndex("StandortID");

                    b.ToTable("Maschinen");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.NCProgramm", b =>
                {
                    b.Property<int>("NCProgrammID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateiPfad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaschineID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProjektID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZeichnungsNummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NCProgrammID");

                    b.HasIndex("MaschineID");

                    b.HasIndex("ProjektID");

                    b.ToTable("NCProgramme");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Projekt", b =>
                {
                    b.Property<int>("ProjektID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaschineID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProjektID");

                    b.HasIndex("MaschineID");

                    b.ToTable("Projekte");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.StandardWerkzeugZuweisung", b =>
                {
                    b.Property<int>("StandardWerkzeugZuweisungID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaschineID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RevolverStation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WerkzeugID")
                        .HasColumnType("INTEGER");

                    b.HasKey("StandardWerkzeugZuweisungID");

                    b.HasIndex("MaschineID");

                    b.HasIndex("WerkzeugID");

                    b.ToTable("StandardWerkzeugZuweisungen");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Standort", b =>
                {
                    b.Property<int>("StandortID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hausnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PLZ")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Stadt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Strasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StandortID");

                    b.ToTable("Standorte");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Werkzeug", b =>
                {
                    b.Property<int>("WerkzeugID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschreibung")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("Plattenwinkel")
                        .HasColumnType("REAL");

                    b.Property<double?>("Radius")
                        .HasColumnType("REAL");

                    b.Property<double?>("Steigung")
                        .HasColumnType("REAL");

                    b.Property<int>("WerkzeugUnterkategorieID")
                        .HasColumnType("INTEGER");

                    b.HasKey("WerkzeugID");

                    b.HasIndex("WerkzeugUnterkategorieID");

                    b.ToTable("Werkzeuge");

                    b.HasData(
                        new
                        {
                            WerkzeugID = 1,
                            Name = "Gewindedrehstahl Aussen P=0.75",
                            Steigung = 0.75,
                            WerkzeugUnterkategorieID = 1
                        },
                        new
                        {
                            WerkzeugID = 2,
                            Name = "Messerst. 80°",
                            Plattenwinkel = 80.0,
                            WerkzeugUnterkategorieID = 3
                        },
                        new
                        {
                            WerkzeugID = 3,
                            Name = "Messerst. 35° gekr.",
                            Plattenwinkel = 35.0,
                            WerkzeugUnterkategorieID = 3
                        },
                        new
                        {
                            WerkzeugID = 4,
                            Name = "Abstechst. B=3mm",
                            WerkzeugUnterkategorieID = 4
                        },
                        new
                        {
                            WerkzeugID = 5,
                            Name = "Gravurstichel Ø1, R0.5",
                            WerkzeugUnterkategorieID = 5
                        });
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.WerkzeugEinsatz", b =>
                {
                    b.Property<int>("WerkzeugEinsatzID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anzahl")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BearbeitungsArt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kommentar")
                        .HasColumnType("TEXT");

                    b.Property<string>("KorrekturNummer")
                        .HasColumnType("TEXT");

                    b.Property<int>("NCProgrammID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reihenfolge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RevolverStation")
                        .HasColumnType("TEXT");

                    b.Property<bool>("VerwendetKorb")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WerkzeugID")
                        .HasColumnType("INTEGER");

                    b.HasKey("WerkzeugEinsatzID");

                    b.HasIndex("NCProgrammID");

                    b.HasIndex("WerkzeugID");

                    b.ToTable("WerkzeugEinsaetze");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.WerkzeugKategorie", b =>
                {
                    b.Property<int>("WerkzeugKategorieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WerkzeugKategorieID");

                    b.ToTable("WerkzeugKategorien");

                    b.HasData(
                        new
                        {
                            WerkzeugKategorieID = 1,
                            Name = "Fräser"
                        },
                        new
                        {
                            WerkzeugKategorieID = 2,
                            Name = "Bohrer"
                        },
                        new
                        {
                            WerkzeugKategorieID = 3,
                            Name = "Drehwerkzeug"
                        });
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.WerkzeugUnterkategorie", b =>
                {
                    b.Property<int>("WerkzeugUnterkategorieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BenötigtPlattenwinkel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BenötigtRadius")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BenötigtSteigung")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WerkzeugKategorieID")
                        .HasColumnType("INTEGER");

                    b.HasKey("WerkzeugUnterkategorieID");

                    b.HasIndex("WerkzeugKategorieID");

                    b.ToTable("WerkzeugUnterkategorien");

                    b.HasData(
                        new
                        {
                            WerkzeugUnterkategorieID = 1,
                            BenötigtPlattenwinkel = false,
                            BenötigtRadius = false,
                            BenötigtSteigung = true,
                            Name = "Gewindedrehstahl Aussen",
                            WerkzeugKategorieID = 3
                        },
                        new
                        {
                            WerkzeugUnterkategorieID = 2,
                            BenötigtPlattenwinkel = false,
                            BenötigtRadius = false,
                            BenötigtSteigung = true,
                            Name = "Gewindedrehstahl Innen",
                            WerkzeugKategorieID = 3
                        },
                        new
                        {
                            WerkzeugUnterkategorieID = 3,
                            BenötigtPlattenwinkel = true,
                            BenötigtRadius = false,
                            BenötigtSteigung = false,
                            Name = "Messerst.",
                            WerkzeugKategorieID = 3
                        },
                        new
                        {
                            WerkzeugUnterkategorieID = 4,
                            BenötigtPlattenwinkel = false,
                            BenötigtRadius = false,
                            BenötigtSteigung = false,
                            Name = "Abstechstähle",
                            WerkzeugKategorieID = 3
                        },
                        new
                        {
                            WerkzeugUnterkategorieID = 5,
                            BenötigtPlattenwinkel = false,
                            BenötigtRadius = false,
                            BenötigtSteigung = false,
                            Name = "Kugelfräser",
                            WerkzeugKategorieID = 1
                        });
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Maschine", b =>
                {
                    b.HasOne("NC_Setup_Assist.Models.Hersteller", "Hersteller")
                        .WithMany("Maschinen")
                        .HasForeignKey("HerstellerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NC_Setup_Assist.Models.Standort", "ZugehoerigerStandort")
                        .WithMany("Maschinen")
                        .HasForeignKey("StandortID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hersteller");

                    b.Navigation("ZugehoerigerStandort");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.NCProgramm", b =>
                {
                    b.HasOne("NC_Setup_Assist.Models.Maschine", "ZugehoerigeMaschine")
                        .WithMany()
                        .HasForeignKey("MaschineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NC_Setup_Assist.Models.Projekt", null)
                        .WithMany("NCProgramme")
                        .HasForeignKey("ProjektID");

                    b.Navigation("ZugehoerigeMaschine");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Projekt", b =>
                {
                    b.HasOne("NC_Setup_Assist.Models.Maschine", "ZugehoerigeMaschine")
                        .WithMany()
                        .HasForeignKey("MaschineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZugehoerigeMaschine");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.StandardWerkzeugZuweisung", b =>
                {
                    b.HasOne("NC_Setup_Assist.Models.Maschine", "ZugehoerigeMaschine")
                        .WithMany("StandardWerkzeuge")
                        .HasForeignKey("MaschineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NC_Setup_Assist.Models.Werkzeug", "ZugehoerigesWerkzeug")
                        .WithMany("StandardWerkzeugZuweisungen")
                        .HasForeignKey("WerkzeugID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZugehoerigeMaschine");

                    b.Navigation("ZugehoerigesWerkzeug");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Werkzeug", b =>
                {
                    b.HasOne("NC_Setup_Assist.Models.WerkzeugUnterkategorie", "Unterkategorie")
                        .WithMany()
                        .HasForeignKey("WerkzeugUnterkategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unterkategorie");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.WerkzeugEinsatz", b =>
                {
                    b.HasOne("NC_Setup_Assist.Models.NCProgramm", "ZugehoerigesProgramm")
                        .WithMany("WerkzeugEinsaetze")
                        .HasForeignKey("NCProgrammID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NC_Setup_Assist.Models.Werkzeug", "ZugehoerigesWerkzeug")
                        .WithMany("WerkzeugEinsaetze")
                        .HasForeignKey("WerkzeugID");

                    b.Navigation("ZugehoerigesProgramm");

                    b.Navigation("ZugehoerigesWerkzeug");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.WerkzeugUnterkategorie", b =>
                {
                    b.HasOne("NC_Setup_Assist.Models.WerkzeugKategorie", "Kategorie")
                        .WithMany("Unterkategorien")
                        .HasForeignKey("WerkzeugKategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorie");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Hersteller", b =>
                {
                    b.Navigation("Maschinen");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Maschine", b =>
                {
                    b.Navigation("StandardWerkzeuge");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.NCProgramm", b =>
                {
                    b.Navigation("WerkzeugEinsaetze");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Projekt", b =>
                {
                    b.Navigation("NCProgramme");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Standort", b =>
                {
                    b.Navigation("Maschinen");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.Werkzeug", b =>
                {
                    b.Navigation("StandardWerkzeugZuweisungen");

                    b.Navigation("WerkzeugEinsaetze");
                });

            modelBuilder.Entity("NC_Setup_Assist.Models.WerkzeugKategorie", b =>
                {
                    b.Navigation("Unterkategorien");
                });
#pragma warning restore 612, 618
        }
    }
}
